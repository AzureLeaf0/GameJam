[gd_scene load_steps=3 format=3 uid="uid://cga4pbdsd2cae"]

[sub_resource type="GDScript" id="GDScript_mlgqr"]
script/source = "extends Area2D

signal player_entered_finish(score)

@onready var player = null

func _ready():
	connect(\"body_entered\", Callable(self, \"_on_body_entered\"))

func _on_body_entered(body):
	if body.name == \"Player\":  # Player node'unun adı Player ise
		player = body  # burayı ekle
		var elapsed_time = get_elapsed_time()
		var score = calculate_score(elapsed_time)
		emit_signal(\"player_entered_finish\", score)

func get_elapsed_time():
	# Burada oyun içi geçen zamanı hesapla / al
	# Örneğin bir GameManager singleton'dan veya Timer'dan
	return 30.0  # şimdilik örnek sabit sayı

func calculate_score(elapsed_time):
	const MAX_SCORE = 1000
	const TIME_PENALTY_PER_SECOND = 2
	const TELEPORT_PENALTY = 25
	const DEATH_PENALTY = 100

	# player teleport_count ve death_count değişkenlerini kullan
	var teleport_penalty = player.teleport_count if player else 0
	var death_penalty = player.death_count if player else 0

	var raw_score = MAX_SCORE - (elapsed_time * TIME_PENALTY_PER_SECOND + teleport_penalty * TELEPORT_PENALTY + death_penalty * DEATH_PENALTY)
	return max(0, raw_score)
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_07gpw"]
size = Vector2(41, 45)

[node name="Finish" type="Area2D"]
script = SubResource("GDScript_mlgqr")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("RectangleShape2D_07gpw")
